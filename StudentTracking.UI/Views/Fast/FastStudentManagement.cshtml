@{
    ViewData["Title"] = "FastStudentManagement";
}
@model List<StudentSelectVM>
<h1>Sınıf : </h1>

<style>
    <style >


    body {
        font-family: Arial, Helvetica, sans-serif;
    }

    .flip-card {
        background-color: transparent;
        width: 32%;
        height: 300px;
        perspective: 1000px;
    }

    .flip-card-inner {
        position: relative;
        width: 100%;
        height: 100%;
        text-align: center;
        display: flex;
        justify-content: center;
        align-items: center;
        transition: transform 0.6s;
        transform-style: preserve-3d;
        box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
    }

    .flipped .flip-card-inner {
        transform: rotateY(180deg);
    }

    .flip-card-front, .flip-card-back {
        position: absolute;
        width: 100%;
        height: 100%;
        -webkit-backface-visibility: hidden;
        backface-visibility: hidden;
    }

    .flip-card-front {
        background-color: #e9e9e9;
        color: black;
    }

    .flip-card-back {
        background-color: #eeeded;
        color: white;
        transform: rotateY(180deg);
    }

    .flip-button {
        margin-top: 10px;
        padding: 10px;
        background-color: #4caf50;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }


    #id1 {
        width: 70%;
        display: flex;
        justify-content: end;
    }

    #id2 {
        max-width: 30%;
        display: flex;
        justify-content: end;
    }

    #id3 {
        max-width: 40%;
        display: flex;
        justify-content: start;
        max-height: 35px;
    }

    #id4 {
        max-width: 40%;
        display: flex;
        justify-content: end;
        max-height: 35px;
    }

    #studentName {
    }

    .accordion {
        background-color: #eee;
        color: #444;
        cursor: pointer;
        padding: 5px;
        width: 100%;
        border: solid 1px;
        text-align: left;
        outline: none;
        font-size: 15px;
        transition: 0.4s;
        display: flex;
        justify-content: space-between;
    }


        .accordion:hover {
            background-color: #ccc;
        }

    .panel {
        padding: 0 18px;
        display: none;
        background-color: white;
  
        overflow: hidden;
    }


    .accordion-list {
        list-style-type: none;
        padding: 0;
        margin: 0;
        overflow-y: auto;
        height: 190px;
    }

    .accordion-item {
        margin-bottom: 5px;
    }

    .bi-caret-down::before {
        font-size: 25px;
        content: "\f22c";
    }

    /*

    */
    .mb-3 {
        margin-bottom: 0.5rem;
    }

    .form-control {
        padding: 0.25rem 0.5rem;
    }

    .form-textarea1 {
        padding: 0.25rem 0.5rem;
    }

    .btn-primary {
        padding: 0.25rem 0.5rem;
    }

    #exampleFormControlTextarea1 {
        padding: 0.25rem;
        height: 60px;
        width: 90%;
        margin: 0 auto;
    }

    .panel-sinavlar {
        background-color: #e6f7ff;
    }

    .panel-sorular {
        background-color: #ffebcc;
    }

    .panel-external-sinavlar {
        background-color: #d9ead3;
    }


    #exampleInputEmail1 {
        width: 90%;
        margin: 0 auto;
    }

    .change-button.filled {
        width: 20px;
        height: 20px;
        background-color: #3498db;
        border: none;
        border-radius: 50%;
    }

    /* Eğer bir yuvarlak buton boş ise */
    .change-button {
        width: 20px;
        height: 20px;
        background-color: transparent;
        border: 1px solid #3498db;
        border-radius: 50%;
    }

        .change-button.filled:hover {
            background-color: #2980b9; /* İstediğiniz hover rengini burada belirtin */
        }

        .change-button:hover {
            background-color: #3498db; /* İstediğiniz hover rengini burada belirtin */
        }
</style>



<div class="row col-md-12">

    @for (int i = 0; i < Model.Count(); i++)
    {
        <div class="flip-card m-1" id="card@(Model[i].ID)">
            @await Component.InvokeAsync("Card", Model[i])
        </div>

    }
</div>
<!-- jQuery -->
<!-- ***************************-->

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<script>
    function showToast() {
        var toast = new bootstrap.Toast(document.getElementById('toastContainer'));
        toast.show();
    }

    $(document).ready(function () {
        // Handle form submission

        @for (int i = 0; i < Model.Count(); i++)
        {
            <text>
                $('#addFormContainer'+@Model[i].ID+' form').submit(function (e) {
                    e.preventDefault(); // Prevent the form from submitting in the traditional way

                    // Get form data
                    var formData = {
                        Question: $('#QuestionTxt'+@(Model[i].ID)).val(),
                        Description: $('#DescriptionTxt'+@(Model[i].ID)).val(),
                        StudentId: @Model[i].ID
                        // Add more data as needed
                    };

                    // Perform AJAX request
                    $.ajax({
                        type: 'POST',
                        url: '/Fast/FastStudentManagement', // Update with your actual controller and action names
                        data: formData,
                        success: function (data) {
                            // Handle success (optional)
                            showToast();
                            console.log('Data sent successfully:', data);
                             flipCard(@Model[i].ID); // Kartın ön yüzünü döndürme fonksiyonu
                        },
                        error: function (error) {
                            // Handle errors (optional)
                            console.error('Error:', error);
                        }
                    });

                    $.ajax({
                        type: 'GET',
                        url: '/Fast/FastStudentGetDetails',
                        data: formData,
                        success: function (data) {
                            console.log(data);
                            // Handle success (optional)
                            $("#card" + @Model[i].ID).html('');
                            $("#card" + @Model[i].ID).html(data);
                        },
                        error: function (error) {
                            // Handle errors (optional)
                            console.error('Error:', error);
                        }
                    });
                });
            </text>
        }
    });



    function flipCard(index) {
        var card = document.getElementById('card' + index);
        card.classList.toggle('flipped');
    }
    function changeContent(index, day) {
        var card = document.getElementById('card' + index);
        card.classList.remove('flipped'); //kartın donuk olup olmadıgına bakar
        var frontContent = document.querySelector('#card' + index + ' .flip-card-front');
        var changeButtons = document.querySelectorAll('#card' + index + ' .change-button');
        // Önce tüm düğmelerin içeriğini sıfırlarsss
        changeButtons.forEach(function (button) {
            button.classList.remove('filled');
        });

        // Tıklanan düğmeyi doldurur
        changeButtons[day - 1].classList.add('filled');
        //frontContent.innerHTML = ``;

        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });
    }
</script>

<script>
    var acc = document.getElementsByClassName("accordion");
    var i;

    for (i = 0; i < acc.length; i++) {
        acc[i].addEventListener("click", function () {
            this.classList.toggle("active");
            var panel = this.nextElementSibling;
            if (panel.style.display === "block") {
                panel.style.display = "none";
            } else {
                panel.style.display = "block";
            }
        });
    }

    var isExpanded = false;

    document.getElementById('expandAllBtn').addEventListener('click', function () {
        var panels = document.querySelectorAll('.panel');

        panels.forEach(function (panel) {
            if (panel.style.display === 'block') {
                panel.style.display = 'none';
            } else {
                panel.style.display = 'block';
            }
        });
        isExpanded = !isExpanded;
    });
</script>

